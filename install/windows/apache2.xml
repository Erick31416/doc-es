<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8e732e84a1425cf0ab3a5b0da8fe113c7a6da85e Maintainer: jorgeolaya Status: ready -->
<!-- Reviewed: yes Maintainer: julionc -->

<sect1 xml:id="install.windows.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Apache 2.x en Microsoft Windows</title>
 <para>
  Esta sección contiene notas y sugerencias específicas de Apache 2.x instaladas
  con PHP en sistemas Microsoft Windows.
 </para>
 <note>
  <para>
   Se debe leer primero el <link linkend="install.windows.manual">manual
   de instalación PHP en Windows</link>
  </para>
 </note>

 <para>
  Se recomienda consultar la
  <link xlink:href="&url.apache2.docs;">Documentación de Apache</link>
  para obtener un conocimiento básico del servidor Apache 2.x.
  También considere leer las
  <link xlink:href="&url.apache2.windows;">notas específicas para Windows</link>
  para Apache 2.x antes de seguir leyendo.
 </para>

 <para>
  Descargue la versión más reciente de
  <link xlink:href= "&url.apachelounge.download;">Apache 2.x</link>
  y una versión adecuada de PHP. Siga los pasos del
  <link linkend="install.windows.manual">manual de instalación</link>
  y regrese para continuar con la integración de PHP y Apache.
 </para>

 <para>
  Hay tres formas de configurar PHP para que funcione con Apache 2.x en Windows.
  PHP se puede ejecutar como controlador, como CGI o bajo FastCGI
 </para>

 &note.apache.slashes;

 <sect2 xml:id="install.windows.apache2.module">
  <title>Instalación como un controlador de Apache</title>
  <para>
   Para cargar el módulo PHP en Apache 2.x las siguientes líneas en el
   fichero de configuración &httpd.conf; de Apache deben ser añadidas:
   <example>
    <title>PHP y Apache 2.x como controlador</title>
    <programlisting role="apache-conf">
<![CDATA[
#
LoadModule php8_module "c:/php/php8apache2_4.dll"
AddHandler application/x-httpd-php .php
# configure the path to php.ini
PHPIniDir "C:/php"
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    Recuerde, la ruta real de PHP debe sustituirse por
    <filename>C:/php/</filename> en los ejemplos anteriores.
    Asegúrese que el fichero al que hace referencia en la directiva LoadModule
    está en la ubicación especificada, y utilize <filename>php7apache2_4.dll</filename>
    para PHP 7, o <filename>php8apache2_4.dll</filename> para PHP 8.
   </simpara>
  </note>
  <para>
   The above configuration will enable PHP handling of any file that has a
   .php extension, even if there are other file extensions. For example, a
   file named <filename>example.php.txt</filename> will be executed by the
   PHP handler. To ensure that only files that <emphasis>end in</emphasis>
   <filename>.php</filename> are executed, use the following configuration
   instead:

   La configuración anterior permitirá el manejo de PHP de cualquier fichero que
   contenga la extensión .php, incluso si hay otras extensiones de fichero. Por ejemplo,
   el fichero llamado <filename>example.php.txt</filename> será ejecutado por el
   controlador PHP. Para garantizar que solo se ejecuten los ficheros que <emphasis>terminen en</emphasis>
   <filename>.php</filename>, utilice la siguiente configuración:
  </para>

  <example>
   <programlisting role="apache-conf">
<![CDATA[
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
   </programlisting>
  </example>
 </sect2>

 <sect2 xml:id="install.windows.apache2.cgi">
  <title>Ejecución de PHP como CGI</title>

  <para>
   Se recomienda consultar la
   <link xlink:href="&url.apache.cgi;">documentación de Apache CGI</link>
   para una comprensión más completa de la ejecución de CGI en Apache.
  </para>

  <para>
   Para ejecutar PHP como CGI, deberá colocar los ficheros php-cgi en un
   directorio designado como directorio CGI utilizando la directiva ScriptAlias.
  </para>

  <para>
   Será necesario colocar una línea <literal>#!</literal> en los ficheros PHP,
   que apunte a la ubicación del binario PHP:

   <example>
    <title>PHP y Apache 2.x como CGI</title>
    <programlisting>
<![CDATA[
#!C:/php/php.exe
<?php
  phpinfo();
?>
]]>
    </programlisting>
   </example>
  </para>
  &warn.install.cgi;
 </sect2>

 <sect2 xml:id="install.windows.apache2.fastcgi">
  <title>Ejecutando PHP bajo FastCGI</title>

  <para>
   Ejecutar PHP bajo FastCGI tiene una serie de ventajas con respecto a ejecutarlo bajo
   CGI. Configurarlo de esta manera es bastante sencillo:
  </para>
  <para>
   Descargue <literal>mod_fcgid</literal> desde
   <link xlink:href="&url.apachelounge.download;">&url.apachelounge;</link>.
   Los binarios de Win32 están disponibles para descargar desde ese sitio.
   Instale el módulo de acuerdo con las instrucciones que lo acompañarán.
  </para>
  <para>
   Configure su servidor web como se muestra a continuación, teniendo cuidado de ajustar cualquier ruta
   que reflejen la forma en que ha instalado las cosas en su sistema particular:
   <example>
    <title>Configurar Apache para ejecutar PHP como FastCGI</title>
    <programlisting>
<![CDATA[
LoadModule fcgid_module modules/mod_fcgid.so
# ¿Dónde está el fichero php.ini?
FcgidInitialEnv PHPRC        "c:/php"
AddHandler fcgid-script .php
FcgidWrapper "c:/php/php-cgi.exe" .php
]]>
    </programlisting>
   </example>

   Los archivos con una extensión .php ahora serán ejecutados por el
   contenedor PHP FastCGI.
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
